#!/usr/bin/env ruby

require 'bundler/setup'
require 'multi_json'
require 'twitter'
require 'yaml'
require_relative 'retweeter'

config = YAML.load(File.read('config/config.yml'))
twitter = Twitter::Client.new(Hash[config.map { |k, v| [k.to_sym, v] }])
retweeter = Retweeter.new(twitter)

command, filename = ARGV

case command
when nil
  puts "Usage:"
  puts " bot retweet - retweet matching tweets from bot's timeline"
  puts " bot test-retweet - see what would be retweeted"
  puts " bot fetch [file] - save last 3 months of tweets from followed users to a json file (or print to stdout)"
  puts " bot cached [file] - start web UI with data from a json file or stdin"
  puts " bot live - start web UI with data loaded on demand"

when 'retweet'
  retweeter.retweet_new_tweets

when 'test-retweet'
  retweeter.print_retweetable_tweets

when 'fetch'
  json = retweeter.fetch_all_users_json(
    :extra_users => ENV['EXTRA_USERS'] && ENV['EXTRA_USERS'].split(','),
    :only_users => ENV['ONLY_USERS'] && ENV['ONLY_USERS'].split(','),
    :days => ENV['DAYS'] && ENV['DAYS'].to_i
  )
  data = MultiJson.dump(json)
  filename ? File.write(filename, data) : puts(data)

when 'cached'
  require_relative 'server'
  data = filename ? File.read(filename) : STDIN.read
  json = MultiJson.load(data, :symbolize_keys => true)
  Server.start(retweeter, json)

when 'live'
  require_relative 'server'
  Server.start(retweeter)

else
  raise "Unknown command #{command}"

end
